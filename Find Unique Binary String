class Solution {
public:
    string findDifferentBinaryString(vector<string>& nums) {
       vector<int>result;
       for(auto s:nums){
          result.push_back(stoi(s,nullptr,2));
       }
       int i=0;
       string ans="";
       while(i<nums.size()){
           int temp=result[i];
           if(temp<nums.size() && result[i]!=i){
            swap(result[i],result[temp]);
           }
           else{
               i++;
           }
       }
       for(int i=0;i<result.size();i++){
           if(result[i]!=i){
               ans=bitset<16>(i).to_string().substr(16-result.size());
               break;
           }
       }
       return ans.empty() ? bitset<16>(result.size()).to_string().substr(16-result.size()):ans;
    }
};    
