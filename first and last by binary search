class Solution {
public:
    int first(vector<int>& nums, int target){
        int end=nums.size()-1;
        int start=0;
        int mid=start+(end-start)/2;
        int ans=-1;
        while(start<=end){
            if(nums[mid]==target){
               ans=mid;
               end=mid-1;
            }
            if(nums[mid]<target){
                start=mid+1;
            }
            else if(nums[mid]>target){
                end=mid-1;
            }
            mid=start+(end-start)/2;
        }
           return ans;
    }
     int last(vector<int>& nums, int target){
        int end=nums.size()-1;
        int start=0;
        int mid=start+(end-start)/2;
        int ans=-1;
        while(start<=end){
            if(nums[mid]==target){
               ans=mid;
               start=mid+1;
            }
            if(nums[mid]<target){
                start=mid+1;
            }
            else if(nums[mid]>target){
                end=mid-1;
            }
            mid=start+(end-start)/2;
        }
           return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
     vector<int>val;
      val.push_back(first(nums, target));
      val.push_back(last(nums, target));
      return val;
    }
};
