#include <iostream>

using namespace std;
void merge(int *arr ,int s,int e){
    int mid=(s+e)/2;
    int l1=mid-s+1;
    int l2=e-mid;
    int *first=new int[l1];
    int *second=new int[l2];
    int mi=s;
    for(int i=0;i<l1;i++){
        first[i]=arr[mi++];
    }
    mi=mid+1;
    for(int i=0;i<l2;i++){
        second[i]=arr[mi++];
    }
    int index1=0;
    int index2=0;
     mi=s;
    while(index1<l1&&index2<l2){
        if(first[index1]<second[index2]){
            arr[mi++]=first[index1++];
        }
        else{
            arr[mi++]=second[index2++];
        }
    }
    while(index1<l1){
         arr[mi++]=first[index1++];
    }
    while(index2<l2){
          arr[mi++]=second[index2++];
    }
}
void mergesort(int *arr,int s,int e){
    if(s>=e){
        return;
    }
    int mid=(s+e)/2;
    mergesort(arr,s,mid);
    mergesort(arr,mid+1,e);
    merge(arr,s,e);
}
int main()
{
   int arr[5]={12,3,44,1,88};
   int n=5;
   mergesort(arr,0,n-1);
 for(int i=0;i<n;i++){
     cout<<arr[i]<<" ";
 }
    return 0;
}
