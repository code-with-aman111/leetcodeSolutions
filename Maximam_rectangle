class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        int val=0;
        int n=matrix[0].size();
        vector<int>ans(n,0);
        int maxval=0;
        for(int i=0;i<matrix.size();i++){
            for(int j=0;j<matrix[0].size();j++){
                if(matrix[i][j]=='1'){
                    ans[j]++;
                }
                else{
                ans[j]=0;
                }
            }
            stack<int>new_s;
            vector<int>right(n,n);
            vector<int>left(n,-1);
        for(int i=0;i<matrix[0].size();i++){
         while(!new_s.empty()&& ans[i]<ans[new_s.top()]){
            right[new_s.top()]=i;
            new_s.pop();
         }
            new_s.push(i);
        }
        while(!new_s.empty()) new_s.pop();
        for(int i=n-1;i>=0;i--){
         while(!new_s.empty()&& ans[i]<ans[new_s.top()]){
            left[new_s.top()]=i;
            new_s.pop();
         }
            new_s.push(i);
        }
        while(!new_s.empty()) new_s.pop();
        int val1=0;
        for(int i=0;i<n;i++){
            int val=ans[i]*(right[i]-left[i]-1);
             if(val>val1){
                val1=val;
             }
        }
       if(val1>maxval){
          maxval=val1;
         }
        }
        return maxval;
    }
};
